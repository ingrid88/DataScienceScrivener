{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf340
\cocoascreenfonts1{\fonttbl\f0\fnil\fcharset0 Cochin;}
{\colortbl;\red255\green255\blue255;}
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural

\f0\fs28 \cf0 Clustering\
Agglomerative hierarchical clustering \
(you find closest points and make them into clusters, next iteration you find points closest to that cluster and add it, or combine clusters) each iteration you have fewer and fewer clusters)\
\
2 parameters\
Affinity and linkage\
Linkage (might use fartherest point to compute and outliers are influencial\
\
\
Jacard distance between things that contain the same thing but frequency might matter\
\
DBSCan: only look at points within that distance measure and we say how many points have to be within that area or space in order for it to be part of this cluster\'85. Or candidates. Once you make your cluster you go to all points made from that cluster and apply the same rule. If there aren\'92t enough points around a point that was originally added, then its considered a noise point within the cluster (not same amount of connectivity or centrality as other clusters)  as u reduce the distance you get more clusters\'85.  Use this by doing from sklearn.cluster import DBSCAN\
\
DRAWBACK!\
(Not working well on multiple scales of clustering\
DBSCAN is great but if the clusters are different densities or sizes, dbscan wont see the clusters successfully \
\
Optics? Dbscan hierarchical. \
\
metric can be euclidean etc\'85 \
\
\
DBSCAN with cosine similarity\
TFIDF or CountVectorizer for these clusters\
 - Very different types of clusters\
 - Count vectorizer ?? \
Tfidf loses repeat words \
\
\
Euclidean requires NORMALIZED DATA\
\
MEAN SHIFT\'85. ?\
\
Creating a historgrame in multidementional space and the size of the bin or bandwidth matters\
Kernel, bandwidth, distirbution function\
\
Non-parametric density estimation\
Kernel density estimation\
\
Simple: histogram\
Bandwidth is each bar or bin, the size of that is the bandiwth (the size of the bin)\
As you decrease the bandwidth you wont see the true clusters so you need to tune it. \
\
From sklearn.cluster import MeanShift\
\
\
Pair problem is 2(x+y/100) - 1/100 = y + x/100\
\
OR\
\
2y - 100 = x-1\
2x + 1 = y}