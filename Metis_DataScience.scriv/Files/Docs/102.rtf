{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf340
\cocoascreenfonts1{\fonttbl\f0\fnil\fcharset0 Cochin;}
{\colortbl;\red255\green255\blue255;}
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural

\f0\fs28 \cf0 Preliminary:\
\
\
Talk like youknow, \
They want your background,, how you think about coding, metaognition\
\
Do you see your work through completion, do you fix things that aren\'92t quite right even if you dont have to?\
\
You have to be able to communicate and be valuable in other areas\
\
\
Give the impression of \
\
\
I should have CANNED RESPONSES to a lot of stuff:\
\
An interesting technical problem you solved (how you did it, why you did it)\
An interpersonal conflict you overcame\
Leadership or ownership story (doesn\'92t have to be technical)\
Story about what you should avhe done differently in a past project (not necessarily technical)\
 - This is a humble bragg  (problem is eg my enthusiasm)\
- Piece of trivia about your favorite language, and something you do and don\'92t like about said language\
- Whenever you go to a company, have questions prepared about it!!!!! Even if you are not interested in joining them (act like you really want to join them)\
	- How they make money\
     - How they support their mission\
      - There engineering stategies (how they ship code out the door)   \'85. Scrub, waterfall, agile, the culture around shipping code\'85\'85\
    - In general nerd out about stuff\
Someone who needs som help along the way bout communicates clearly can be even better than someonw hwo breezes through the questions but doesnt explain what they are doing\'85.\
DONT BE A BLACK BOX!   \'85\
\
THERE ARE TWO KINDS of technical questions: clean efficient code\'85. And then the chitchat problem, the interviewer just wants you to talk about something, these questions are often either: \
	High level system design (how would you build a twitter clone?)\
     Eg. How would you build the internet?\
They want digram, boxes, UML? Points and flow\'85. System design diagrams\
    Finally trivial problems: what is a lambda in python, (anonymous function)\'85. \
You can ask, should we write code for this?\
\
ALWAYS USE \'93WE\'94!  Make it feel collaborative\'85\'85    paper or whiteboard, always choose whiteboard becasue when it comes to sitting down and writing on paper you might be facing eachother and that is combative and not collaborative\
\
THINK OUTLOUD: eg \'93lets try doing it this way \'97 not sure yet if it\'92ll work\'94\
You can collect your thoughts for 20 secs but no longer\'85.. Start talking. VERY IMPORTANT\
If you are stuck, say what you are thinking. Say waht might work. Say what you thought could work and why it doesn\'92t work. \
If you can eliminate solutions, it shows you have a depth of knowledge. \'85. \
One of the things you thought wouldn\'92t work, might work\'85. Esp if interviewer keys in and says \'93but wait\'94\
In general this goes for general chit chat questions. If they ask you b\
If someone asks you a trivia question, and you DONT KNOW \'85. Say you dont know: dont appear to know bout something you dont know!\
Instead say I\'92m not sure, but I\'92d guess x because..\'94 The because can involve rulling out implications or pulling examples from other languages or other problems. \'85. This helps showcase what you know\'85. \
They might give you the trapping salesman problem. \
\
Don\'92t confidently blurt out an answer right away!!!\
If its right you\'92ll still have to explain it, and if its wrong you\'92ll seem reckless\
No one gets points for speed unless its explicit\
\
How to get unstuck? THINK OUTLOUD\
	- Relax: it doesn\'92t mean you\'92ve failed, the interviewer usually cares more bout your ability to cleverly poke the problem from a few different angles than your ability to stumble into the correc tanswer. When hope seems lost, keep poking. \
  - Drawing pictures helps: dontw ast time trying to think in your head, think on the board. \
 = Solve a simpler version of the problem\
  - Write a naive inefficient brute force solution and optimize it later\
- Wait for a hint (but don\'92t stare!!)   \
 - Call a helper function and keep moving\'85\'85..  Say you\'92ll get back to it\
\
\
OK, so how do you work through it smartly:???\
	- When you\'92re actually working through the problem:\
 - Think about the bounds on space and runtime (more on that later)\
- Call a a helper function and keep moving again\
If the helper function is trivial you might even get away with never implementing it. \
\
SPACE vs TIME complexity\
\'93Hi\'94 n times is constant\'85.   You can think of space and time as two levers\'85 tradeoff between the two\'85 if you can cache something, you can compute something more quickly at the tradeoff of space. \
Dont worry about syntax\'85. Because you wont get through the blueprint of the problem\'85 GET THROUGH THE PROBLEM!\
Always leave yourself plenty of room (on the whiteboard you\'92re using)\
Save of by one chekckking\
USE DESCRIPTIVE VARIABLE NAMES\
Once you\'92re done with the skeleton of your algorithm\'85\'85. You clean it up!\
  - Walk through yoursolution by hand, out loud\'85. With an example input. Eg a positive whole number. \
- Test edge cases\
	  - Empty set arrays\
      - Single item sets arrays\
      - Zero and negative numbers\
\
Have good tech questions about the company \'85\
Communicate your thinking, do not assume that anything you write is understood unless they are explicity about what they understand \'85. And say yes I understand. \
DONT BE BORING,\
 you should be practicing coding problems. Not using documentation\'85.\
How you have opinions about technical things . \
\
\
\'97 If you dont talk to a technical person in the whole process \'97 you should not be working there\
\
\
Reservoir is a smple of your stream\
RESERVOIR SAMPLING !!!\
\
Problem 7\
Clustering problem on ip address : \
(Its not a classification problem. \'97 Its unsupervised)\
User agent\'85 }